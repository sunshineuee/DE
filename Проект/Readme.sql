Складская система Warehouse состоит из 
- 8 таблиц справочной информации, 
- 2 таблиц под информацию об операциях, 
- 1 регистра актуальных остатков

Справочники:
____________
1. Страны (countries). Функциональных особенностей нет
2. Пользователи (users). Функциональных особенностей нет
3. Склады (warehouses). Функциональных особенностей нет
4. Типы документа (document_types). Функциональных особенностей нет
5. Типы номенклатуры (nomenclature_types). Функциональных особенностей нет
6. Контрагенты (counterparties). 
	Если это юрлицо (entity = 1) то заполнения ИНН обязательно, инче обязателен паспорт для заполнение
	Триггерами сделана проверка, ругается если занчения не заполнены и очищает ненужные значения
7. Номенклатура (nomenclature).
	Если если в выбранном номенклатурном типе (nomenclature_type_id) соответствующие свойства включены (use_code, use_weight, use_volume= 1) 
		то их заполнение обязательно, инче очищаются перед записью в БД, триггерами сделаны соответствующие проверки
8. Серии (series).
	Если если в выбранном номенклатурном типе (nomenclature_type_id) серии отключены (use_series = 0) 
		такой объект записан не будет, триггерам выбаст ошибку
		
Документы:
__________
1. Документы (documents). Функциональных особенностей нет
2. Операции (operations). Табличная часть документов.
(Важно!) Мною предпологалось, что эта таблица будет одновременно использоватьсь и как табличные данные документа, 
	и как аналитический регистр для отчетности, поэтому некоторые поля из шапки я в нем продублировал (counterparty_id, user_id, warehouse_id),
	Стоило разделить эти функции на две таблицы, но это бы потребовало больше времени на реализацию
	
	При сохранении проверяется свойство use_series номенклатурного типа номенклатуры 
					(operations -> nomenclature_id -> nomenclature_type_id -> use_series)
		если серии отключены, series_id в отперациях очищается
		если включен, проверяется серия (series_id):
			если незаполнена - выдает предупреждение, если заполнениа - проверяется её тип номенклатуры на соответствие типу номенклатуры из самой номенклатуры
					(operations -> series_id -> nomenclature_type_id = operations -> nomenclature_id -> nomenclature_type_id)
				если не соответствуют - предупреждение
	
	при заполнении данных специальный триггер для заполнения подобных некорректных серий, где брал первую корректною по запросу
	
	так же отдельно внимание тут уделял номеру строки line_num. Чтобы корректно его заполнить и не создать в процессе конфликтов с уникальностью
	по набору полей UNIQUE(document_id,line_num) написал спецаильную хранимую процедуру operations_line_num_update. 
	Двайная запись всей таблицы не лучшее решение, но пока так :)
	При каждом изменении operations корректируются оперативные остатки по товарам на складах stock_balances
	
Ренгистр текущих остатков
_________________________

имеет три ключевых поля UNIQUE(warehouse_id,nomenclature_id,series_id) и почему-то не ругается на добавление дублей по набору ключевых полей...
для его обновления написана специальная хранимая процедура, которая запускается по триггерам таблицы operations такой вот аналог 1ски :)

_______________________________________
_______________________________________

проект можно собрать запустив скрипт FULL.sql а после заполнив его данными из скрипта Dата.sql
дамп собранного проекта DUMPwarehouse.sql Диаграмма - Dia.png

FULL.sql собирает в себе скрипты Tables.sql, Connections.sql, Indexes.sql, Triggers.sql и делает отчеты Reports.sql представлениями



	

	

